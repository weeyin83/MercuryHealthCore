name: Mercury Health Core CI/CD

on: [push]

jobs:
  # build .net core web app
  buildWeb:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108
    
    - name: Build with dotnet
      run: |
        echo ls
        ls
        dotnet build Web/MercuryHealthCore.csproj --configuration Release

    - name: Test with dotnet
      run: dotnet test Web/MercuryHealthCore.csproj --configuration Release
      
    - name: Package everything up with dotnet
      run: dotnet publish Web/MercuryHealthCore.csproj --configuration Release

    - name: publish build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: webapp
        path: Web/bin/Release/netcoreapp2.2/publish

  # build database schema, build artifact is the dacpac
  buildDatabase:
    runs-on: windows-latest

    steps:
    # checkout code from repo
    - name: checkout repo
      uses: actions/checkout@v1

    # use msbuild to build VS solution which has the SSDT project
    - name: build solution
      run: |
        echo "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\bin\MSBuild.exe MercuryHealthCore.sln"
        "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe" MercuryHealthCore.sln
    
    # look for dacpac
    - name: find dacpac
      run: |
        echo "ls d:\a\MercuryHealthCore\MercuryHealthCore\MercuryHealthDB\bin\Debug\"
        ls "%GITHUB_WORKSPACE%\MercuryHealthDB\bin\Debug"
      
    # publish build artifact (dacpac) back to github
    - name: publish build artifacts back to GitHub
      uses: actions/upload-artifact@master
      with:
        name: db
        path: MercuryHealthDB\bin\Debug

  # publish IaC as build artifact
  uploadIaC:
    runs-on: windows-latest

    steps:
    # checkout code from repo
    - name: checkout repo
      uses: actions/checkout@v1

    # upload IaC folder
    - name: upload IaC
      uses: actions/upload-artifact@master
      with:
        name: IaC
        path: IaC

  # provision infrastructure in Azure
  provisionInfra:
    needs: uploadIaC
    runs-on: windows-latest
    steps:
    # download IaC artifact
    - name: download IaC
      uses: actions/download-artifact@master
      with:
        name: IaC

    - name: look for ps1 file
      run: |
        ls '%GITHUB_WORKSPACE%\IaC\AzCLI'

    - name: provision webapp and db infrastructure in azure
      env:
        SERVICE_PRINCIPAL: http://AbelDeployPrincipal
        SERVICE_PRINCIPAL_TENANT: 72f988bf-86f1-41af-91ab-2d7cd011db47
        AZURE_SUBSCRIPTION_NAME: ca-abewan-demo-test
        RESOURCE_GROUP: mercuryhealthcore-rg
        RESOURCE_GROUP_REGION: southcentralus
        SERVER_NAME: abelmercuryhealthcoredbserverbeta
        DB_LOCATION: southcentralus
        ADMIN_LOGIN: abel
        START_IP: 0.0.0.0
        END_IP: 0.0.0.0
        DB_NAME: abelmercuryhealthcoredbbeta
        WEB_APP_NAME: abelmercuryhealthcore-beta
        ENVIRONMENT: "[beta]"
      run: >
        powershell -command "& '%GITHUB_WORKSPACE%\IaC\AzCLI\provisionWebAndDB.ps1'" 
        -servicePrincipal %SERVICE_PRINCIPAL% 
        -servicePrincipalSecret ${{ secrets.SERVICE_PRINCIPAL_SECRET }} 
        -servicePrincipalTenantId %SERVICE_PRINCIPAL_TENANT% 
        -azureSubscriptionName %AZURE_SUBSCRIPTION_NAME% 
        -resourceGroupName %RESOURCE_GROUP% 
        -resourceGroupNameRegion %RESOURCE_GROUP_REGION% 
        -serverName %SERVER_NAME% 
        -dbLocation %DB_LOCATION% 
        -adminLogin %ADMIN_LOGIN% 
        -adminPassword ${{ secrets.DB_PASSWORD }} 
        -startip %START_IP% 
        -endip %END_IP% 
        -dbName %DB_NAME% 
        -webAppName %WEB_APP_NAME% 
        -environment %ENVIRONMENT%

  # deploy web app to azure app service
  deployWeb:
      needs: [buildWeb, provisionInfra]
      runs-on: windows-latest
      steps:
      # download build artifacts
      - name: download build artifacts
        uses: actions/download-artifact@master
        with: 
          name: webapp

      # Deploy build artifact to Azure App Service
      - name: Publish website to Azure App Service
        uses: azure/appservice-actions/webapp@master
        with:
          app-name: abelmercurywebcore  # Replace with your app name
          package: webapp  # Specify the folder or file to deploy
          publish-profile: ${{ secrets.PUBLISH_PROFILE }}  # Replace with the name of your publish profile

  # deploy new database schema using dacpac
  deployDB:
      needs: [buildDatabase, provisionInfra]
      runs-on: windows-latest
      steps:
      # download build artifacts
      - name: download build artifacts
        uses: actions/download-artifact@master
        with: 
          name: db

      # deploy dacpac calling my dacpac-deploy task
      - name: update database schema using dacpac deploy action
        uses: abelsquidhead/dacpac-deploy@master
        with:
          connectionString: ${{ secrets.DATABASE_CONNECTION_STRING }}
          dacpac: 'db\MercuryHealthDB.dacpac'
          additionalArguments: '/p:BlockOnPossibleDataLoss=False'

      # deploy dacpac calling my dacpac-deploy task
      - name: update database schema using dacpac deploy action
        uses: abelsquidhead/dacpac-deploy@master
        with:
          connectionString: ${{ secrets.DATABASE_CONNECTION_STRING }}
          dacpac: 'db\MercuryHealthDB.dacpac'
          additionalArguments: '/p:BlockOnPossibleDataLoss=False'
